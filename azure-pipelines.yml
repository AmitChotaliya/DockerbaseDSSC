# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: 'dbb869b7-ec0a-4b1e-b81b-eca7705641f1'
  imageRepository: 'mobileappdssc'
  containerRegistry: 'bryce.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/Dockerfile'
  tag: '$(Build.BuildId)'

  # Smartcheck connection build time variables
  dsscURL: 'dssc.bryceindustries.net'
  dsscUser: 'administrator'
  dsscPass: 'Trend@123'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: Docker@2
      displayName: Build docker image
      inputs:
       command: build
       repository: $(imageRepository)
       dockerfile: $(dockerfilePath)
       containerRegistry: $(dockerRegistryServiceConnection)
       tags: |
          $(tag)
    - script: |
          echo "{\"insecure-registries\" : [ \"dssc.bryceindustries.net:5000\" ]}\" >> /etc/docker/daemon.json
          sudo systemctl daemon-reload
          sudo systemctl restart docker
    - script: | 
          docker run -v /var/run/docker.sock:/var/run/docker.sock deepsecurity/smartcheck-scan-action --image-name $(imageRepository):$(tag) --smartcheck-host=$(dsscURL) --smartcheck-user=$(dsscUser) --smartcheck-password=$(dsscPass) --insecure-skip-tls-verify --insecure-skip-registry-tls-verify --preregistry-scan --preregistry-user admin --preregistry-password Trend@123 --findings-threshold '{"malware": 100, "vulnerabilities": { "defcon1": 100, "critical": 100, "high": 100 }, "contents": { "defcon1": 100, "critical": 100, "high": 100 }, "checklists": { "defcon1": 100, "critical": 100, "high": 100 }}'
      displayName: "Scanning image for security risks"

    - task: Docker@1
      displayName: Push docker image to registry
      inputs:
        command: Push an image
        
        

